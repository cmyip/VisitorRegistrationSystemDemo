@inherits LayoutComponentBase
@using VRS_POC.Services;
@inject LoadingService loadingService
<div class="main">
    <div class="content px-4">
        @Body
    </div>
</div>
@if (showLoading)
{
    <div class="loading-container">
        <div class="loading-container-inner">
            <div class="loader"></div>
        </div>
    </div>
}
<style>
    .content {
        display: flex;
        justify-content: center;
        flex-direction: center;
    }

    @@media only screen and (min-width: 800px) {
        .content > div {
            width: 640px;
        }
    }

    @@media only screen and (max-width: 799px) {
        .content > div {
            width: 100%;
        }
    }

    .loader {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .loading-container {
        position: fixed;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0,0,0,0.8);
        top: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        left: 0;
        z-index: 100;
    }
</style>

@code {
    bool showLoading;

    protected override async Task OnInitializedAsync()
    {
        loadingService.OnSetLoading += onLoadingChange;
    }

    private void onLoadingChange(object sender, bool changedState)
    {
        showLoading = changedState;
        base.InvokeAsync(StateHasChanged);
    }
}